#### Christian Orellana
#### June 2020
#### Tkinter App For Logging into a Website via a local gui on a windows 10 machine

"""
The following requirements are needed for this app:

1. Python 3.8 https://www.python.org/
2. Chrome Driver https://pypi.org/project/selenium/
3. Selenium https://pypi.org/project/selenium/
4. Windows 10 OS Local machine

"""
##### IMPORT

from datetime import datetime, time
import time as tiempo
from selenium import webdriver
from selenium.common.exceptions import TimeoutException
from selenium.webdriver.support.ui import Select
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
import os
import sys
from tkinter import font
from tkinter import messagebox
import tkinter
import subprocess
import plistlib

logo = '''

'''

class App:

	def __init__(self, master):

		### Config of Tkinter
		self.master = master
		self.master.resizable(False, False)
		self.master.title("Chris Login GUI")

		self.master.protocol("WM_DELETE_WINDOW", self.close)
		self.master.call('wm', 'attributes', '.', '-topmost', True)
		self.master.geometry("600x750")

		### Background color
		bgcolor = '#F0F0F0'
		self.master.tk_setPalette(background=bgcolor, highlightbackground=bgcolor)

		### Font
		letter = font.Font(family='system', size=14)
		self.master.option_add("*Font", letter)

		### Menu Bar
		menu_bar = tkinter.Menu(self.master)
		self.master.config(menu=menu_bar)

		### Welcoming Text
		self.frame1 = tkinter.Frame(self.master)
		title_label = tkinter.Label(self.frame1, text="Welcome")
		title_label.grid(row=0, column= 0)
		self.frame1.pack(padx=40, pady=(10, 5))

		### Logo Image
		self.icon_data = tkinter.PhotoImage(data=logo)
		self.frame2 = tkinter.Frame(self.master)
		self.photo_canvas = tkinter.Canvas(self.frame2, width=250, height=250)
		self.photo_canvas.pack()
		self.icon = self.photo_canvas.create_image(0, 0, anchor="nw", image=self.icon_data)
		self.frame2.pack(padx=40, pady=(30, 5))

		### INPUT VARIABLES
		self.input_fullname = tkinter.StringVar()
		self.input_username = tkinter.StringVar()
		self.input_password = tkinter.StringVar()
		
		### INPUT FRAME
		self.frame3 = tkinter.Frame(self.master)
		
		intro_text = tkinter.Label(self.frame3, text="Please Enter Account and Password Below:")
		intro_text.pack(pady=(0,20))

		fullname_label = tkinter.Label(self.frame3, text="Full name:")
		self.entry_fullname = tkinter.Entry(self.frame3, background='white', textvariable=self.input_fullname, width=30)
		username_label = tkinter.Label(self.frame3, text="Account:")
		self.entry_username = tkinter.Entry(self.frame3, background='white', textvariable=self.input_username, width=30)
		password_label = tkinter.Label(self.frame3, text="Password:")
		self.entry_password = tkinter.Entry(self.frame3, background='white', textvariable=self.input_password, width=30, show='*')
		
		fullname_label.pack()
		self.entry_fullname.pack(pady=(0,20))
		username_label.pack()
		self.entry_username.pack(pady=(0,20))
		password_label.pack()
		self.entry_password.pack(pady=(0,20))

		self.frame3.pack(padx=40, pady=5)

		### BUTTONS

		self.frame4 = tkinter.Frame(self.master)

		login_website = tkinter.Button(self.frame4, text='Login', height=1, command=self.login_website)
		login_website.grid(row=0, column=2, padx=10, pady=(2, 15))

		logout_website = tkinter.Button(self.frame4, text='Logout', height=1, command=self.logout_website)
		logout_website.grid(row=1, column=2, padx=10, pady=(2, 15))

		self.frame4.pack(padx=40, pady=(5, 30))

		self.frame5 = tkinter.Frame(self.master)

		self.frame5.pack(padx=40, pady=(5,30))


		self.frame6 = tkinter.Frame(self.master)
		close = tkinter.Button(self.frame6, text='Close', height=1, width=8, command=self.close)
		close.pack(side='right')
		self.frame6.pack(padx=40, pady=(5, 30))


		### Config of Chrome Driver
		self.fullname=self.input_fullname
		self.onekey_user=self.input_username
		self.onekey_pass=self.input_password

		self.sales_site="insert website for login here"
		self.sales_logout="insert logout page here"	

		self.imp_wait_time=8
		self.sleep_time=6
		self.checker_time=15
		self.set_counter=0

		self.options = webdriver.ChromeOptions()

		self.prefs = {"profile.default_content_setting_values.notifications": 1}
		self.options.add_experimental_option('excludeSwitches', ['enable-logging'])
		self.options.add_experimental_option("prefs", self.prefs)
		
		self.driver = webdriver.Chrome(options=self.options)


	#### FUNCTIONS

	def close(self):

		self.master.destroy()

	def login_website(self):

		self.driver.get(self.sales_site)
		print(self.driver.title)

		if self.driver.title == "Login":

			try:
				"This will open up the website and login for us"
				self.driver.find_element_by_xpath("//*[@id='idp_section_buttons']/button/span").click()

				## Prepare to Sign In
				sales_username = self.driver.find_element_by_xpath("//*[@id='userNameInput']")
				sales_pass = self.driver.find_element_by_xpath("//*[@id='passwordInput']")
				sign_in_button = self.driver.find_element_by_xpath("//*[@id='submitButton']")

				## Sign In
				sales_username.send_keys(self.onekey_user.get())
				sales_pass.send_keys(self.onekey_pass.get())
				sign_in_button.click()


				if self.driver.title == "Sign In":
					raise ValueError("Login was not successful, either due to incorrect/missing username or password")
				elif self.driver.title == "Lightning Experience":
					print("Succesfully logged into Webpage")
					self.website_indicator_Canvas.itemconfig(self.website_light, fill="green")
				else:
					raise ValueError("Login might have not been successful, please visually verify the status of the page.")

			except Exception as err:
				print("Unable to log into website due to following error: {}".format(err))
		
		elif self.driver.title == "Log In":

			# This try statement was added in case the user had logged out but wants to log back in.
			try:
				print("User was logged out, logging back into Webpage")
				self.driver.implicitly_wait(self.imp_wait_time)
				onekey_button = self.driver.find_element_by_xpath('/html/body/div[1]/div[1]/div/div/div[4]/div[1]/button')
				tiempo.sleep(self.sleep_time)
				onekey_button.click()
				
				if self.driver.title == "Sign out":
					raise ValueError("Login was not successful, possible user forcefully logged out")
				elif self.driver.title == "Lightning Experience":
					print("Successfully logged into website")
					self.website_indicator_Canvas.itemconfig(self.website_light, fill="green")
				else:
					raise ValueError("Verify the status of the website or Chrome.")

			except Exception as err:
				print("Unable to log into website due to the following error: {}".format(err))
		else:
			print("Website possibly did not load. Please verify status of the page.")


	def logout_website(self):

		try:
			self.driver.get(self.sales_logout)
			print("We are logged out of website")
			self.website_indicator_Canvas.itemconfig(self.website_light, fill="red")
		except Exception as err:
			print("Could not logout, error shown: {}".format(err))

def main():

	root = tkinter.Tk()
	app = App(root)
	app.master.mainloop()

if __name__ == '__main__':
	main()

